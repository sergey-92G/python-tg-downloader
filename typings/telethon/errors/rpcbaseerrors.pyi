"""
This type stub file was generated by pyright.
"""

_NESTS_QUERY = ...
class RPCError(Exception):
    """Base class for all Remote Procedure Call errors."""
    code = ...
    message = ...
    def __init__(self, request, message, code=...) -> None:
        ...
    
    def __reduce__(self): # -> tuple[type[Self], tuple[Any, Any | None, Any | None]]:
        ...
    


class InvalidDCError(RPCError):
    """
    The request must be repeated, but directed to a different data center.
    """
    code = ...
    message = ...


class BadRequestError(RPCError):
    """
    The query contains errors. In the event that a request was created
    using a form and contains user generated data, the user should be
    notified that the data must be corrected before the query is repeated.
    """
    code = ...
    message = ...


class UnauthorizedError(RPCError):
    """
    There was an unauthorized attempt to use functionality available only
    to authorized users.
    """
    code = ...
    message = ...


class ForbiddenError(RPCError):
    """
    Privacy violation. For example, an attempt to write a message to
    someone who has blacklisted the current user.
    """
    code = ...
    message = ...


class NotFoundError(RPCError):
    """
    An attempt to invoke a non-existent object, such as a method.
    """
    code = ...
    message = ...


class AuthKeyError(RPCError):
    """
    Errors related to invalid authorization key, like
    AUTH_KEY_DUPLICATED which can cause the connection to fail.
    """
    code = ...
    message = ...


class FloodError(RPCError):
    """
    The maximum allowed number of attempts to invoke the given method
    with the given input parameters has been exceeded. For example, in an
    attempt to request a large number of text messages (SMS) for the same
    phone number.
    """
    code = ...
    message = ...


class ServerError(RPCError):
    """
    An internal server error occurred while a request was being processed
    for example, there was a disruption while accessing a database or file
    storage.
    """
    code = ...
    message = ...


class TimedOutError(RPCError):
    """
    Clicking the inline buttons of bots that never (or take to long to)
    call ``answerCallbackQuery`` will result in this "special" RPCError.
    """
    code = ...
    message = ...


BotTimeout = TimedOutError
base_errors = ...
