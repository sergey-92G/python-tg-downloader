"""
This type stub file was generated by pyright.
"""

"""
Simple markdown parser which does not support nesting. Intended primarily
for use within the library, which attempts to handle emojies correctly,
since they seem to count as two characters and it's a bit strange.
"""
DEFAULT_DELIMITERS = ...
DEFAULT_URL_RE = ...
DEFAULT_URL_FORMAT = ...
def parse(message, delimiters=..., url_re=...): # -> tuple[Any, list[Any]] | tuple[str, list[Any]]:
    """
    Parses the given markdown message and returns its stripped representation
    plus a list of the MessageEntity's that were found.

    :param message: the message with markdown-like syntax to be parsed.
    :param delimiters: the delimiters to be used, {delimiter: type}.
    :param url_re: the URL bytes regex to be used. Must have two groups.
    :return: a tuple consisting of (clean message, [message entities]).
    """
    ...

def unparse(text, entities, delimiters=..., url_fmt=...): # -> str:
    """
    Performs the reverse operation to .parse(), effectively returning
    markdown-like syntax given a normal text and its MessageEntity's.

    :param text: the text to be reconverted into markdown.
    :param entities: the MessageEntity's applied to the text.
    :return: a markdown-like text representing the combination of both inputs.
    """
    ...

