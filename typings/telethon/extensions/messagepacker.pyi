"""
This type stub file was generated by pyright.
"""

class MessagePacker:
    """
    This class packs `RequestState` as outgoing `TLMessages`.

    The purpose of this class is to support putting N `RequestState` into a
    queue, and then awaiting for "packed" `TLMessage` in the other end. The
    simplest case would be ``State -> TLMessage`` (1-to-1 relationship) but
    for efficiency purposes it's ``States -> Container`` (N-to-1).

    This addresses several needs: outgoing messages will be smaller, so the
    encryption and network overhead also is smaller. It's also a central
    point where outgoing requests are put, and where ready-messages are get.
    """
    def __init__(self, state, loggers) -> None:
        ...
    
    def append(self, state): # -> None:
        ...
    
    def extend(self, states): # -> None:
        ...
    
    async def get(self): # -> tuple[None, None] | tuple[list[Any], bytes]:
        """
        Returns (batch, data) if one or more items could be retrieved.

        If the cancellation occurs or only invalid items were in the
        queue, (None, None) will be returned instead.
        """
        ...
    


