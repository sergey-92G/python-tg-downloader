"""
This type stub file was generated by pyright.
"""

from enum import Enum
from .abstract import Session

class _SentFileType(Enum):
    DOCUMENT = ...
    PHOTO = ...
    @staticmethod
    def from_type(cls): # -> Literal[_SentFileType.DOCUMENT, _SentFileType.PHOTO]:
        ...
    


class MemorySession(Session):
    def __init__(self) -> None:
        ...
    
    def set_dc(self, dc_id, server_address, port): # -> None:
        ...
    
    @property
    def dc_id(self): # -> int:
        ...
    
    @property
    def server_address(self): # -> None:
        ...
    
    @property
    def port(self): # -> None:
        ...
    
    @property
    def auth_key(self): # -> None:
        ...
    
    @auth_key.setter
    def auth_key(self, value): # -> None:
        ...
    
    @property
    def takeout_id(self): # -> None:
        ...
    
    @takeout_id.setter
    def takeout_id(self, value): # -> None:
        ...
    
    def get_update_state(self, entity_id): # -> None:
        ...
    
    def set_update_state(self, entity_id, state): # -> None:
        ...
    
    def get_update_states(self): # -> dict_items[Any, Any]:
        ...
    
    def close(self): # -> None:
        ...
    
    def save(self): # -> None:
        ...
    
    def delete(self): # -> None:
        ...
    
    def process_entities(self, tlo): # -> None:
        ...
    
    def get_entity_rows_by_phone(self, phone): # -> tuple[Any, Any] | None:
        ...
    
    def get_entity_rows_by_username(self, username): # -> tuple[Any, Any] | None:
        ...
    
    def get_entity_rows_by_name(self, name): # -> tuple[Any, Any] | None:
        ...
    
    def get_entity_rows_by_id(self, id, exact=...): # -> tuple[Any, Any] | None:
        ...
    
    def get_input_entity(self, key): # -> InputPeerSelf | InputPeerUser | InputPeerChat | InputPeerChannel | InputPeerUserFromMessage | InputPeerChannelFromMessage | InputPeerEmpty | None:
        ...
    
    def cache_file(self, md5_digest, file_size, instance): # -> None:
        ...
    
    def get_file(self, md5_digest, file_size, cls): # -> None:
        ...
    


