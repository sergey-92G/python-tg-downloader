"""
This type stub file was generated by pyright.
"""

import abc

class SenderGetter(abc.ABC):
    """
    Helper base class that introduces the `sender`, `input_sender`
    and `sender_id` properties and `get_sender` and `get_input_sender`
    methods.
    """
    def __init__(self, sender_id=..., *, sender=..., input_sender=...) -> None:
        ...
    
    @property
    def sender(self): # -> None:
        """
        Returns the :tl:`User` or :tl:`Channel` that sent this object.
        It may be `None` if Telegram didn't send the sender.

        If you only need the ID, use `sender_id` instead.

        If you need to call a method which needs
        this chat, use `input_sender` instead.

        If you're using `telethon.events`, use `get_sender()` instead.
        """
        ...
    
    async def get_sender(self): # -> None:
        """
        Returns `sender`, but will make an API call to find the
        sender unless it's already cached.

        If you only need the ID, use `sender_id` instead.

        If you need to call a method which needs
        this sender, use `get_input_sender()` instead.
        """
        ...
    
    @property
    def input_sender(self): # -> None:
        """
        This :tl:`InputPeer` is the input version of the user/channel who
        sent the message. Similarly to `input_chat
        <telethon.tl.custom.chatgetter.ChatGetter.input_chat>`, this doesn't
        have things like username or similar, but still useful in some cases.

        Note that this might not be available if the library can't
        find the input chat, or if the message a broadcast on a channel.
        """
        ...
    
    async def get_input_sender(self): # -> None:
        """
        Returns `input_sender`, but will make an API call to find the
        input sender unless it's already cached.
        """
        ...
    
    @property
    def sender_id(self): # -> None:
        """
        Returns the marked sender integer ID, if present.

        If there is a sender in the object, `sender_id` will *always* be set,
        which is why you should use it instead of `sender.id <sender>`.
        """
        ...
    


