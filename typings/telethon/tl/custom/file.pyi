"""
This type stub file was generated by pyright.
"""

class File:
    """
    Convenience class over media like photos or documents, which
    supports accessing the attributes in a more convenient way.

    If any of the attributes are not present in the current media,
    the properties will be `None`.

    The original media is available through the ``media`` attribute.
    """
    def __init__(self, media) -> None:
        ...
    
    @property
    def id(self): # -> str | None:
        """
        The old bot-API style ``file_id`` representing this file.

        .. warning::

            This feature has not been maintained for a long time and
            may not work. It will be removed in future versions.

        .. note::

            This file ID may not work under user accounts,
            but should still be usable by bot accounts.

            You can, however, still use it to identify
            a file in for example a database.
        """
        ...
    
    @property
    def name(self): # -> Any | None:
        """
        The file name of this document.
        """
        ...
    
    @property
    def ext(self): # -> str | Any | LiteralString | None:
        """
        The extension from the mime type of this file.

        If the mime type is unknown, the extension
        from the file name (if any) will be used.
        """
        ...
    
    @property
    def mime_type(self): # -> str | None:
        """
        The mime-type of this file.
        """
        ...
    
    @property
    def width(self): # -> Any | int | None:
        """
        The width in pixels of this media if it's a photo or a video.
        """
        ...
    
    @property
    def height(self): # -> Any | int | None:
        """
        The height in pixels of this media if it's a photo or a video.
        """
        ...
    
    @property
    def duration(self): # -> Any | None:
        """
        The duration in seconds of the audio or video.
        """
        ...
    
    @property
    def title(self): # -> Any | None:
        """
        The title of the song.
        """
        ...
    
    @property
    def performer(self): # -> Any | None:
        """
        The performer of the song.
        """
        ...
    
    @property
    def emoji(self): # -> Any | None:
        """
        A string with all emoji that represent the current sticker.
        """
        ...
    
    @property
    def sticker_set(self): # -> Any | None:
        """
        The :tl:`InputStickerSet` to which the sticker file belongs.
        """
        ...
    
    @property
    def size(self): # -> int | None:
        """
        The size in bytes of this file.

        For photos, this is the heaviest thumbnail, as it often repressents the largest dimensions.
        """
        ...
    


