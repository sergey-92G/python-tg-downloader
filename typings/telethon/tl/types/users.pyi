"""
This type stub file was generated by pyright.
"""

from ...tl.tlobject import TLObject
from typing import List, TYPE_CHECKING
from ...tl.types import TypeChat, TypeUser, TypeUserFull

"""File generated by TLObjects' generator. All changes will be ERASED"""
if TYPE_CHECKING:
    ...
class UserFull(TLObject):
    CONSTRUCTOR_ID = ...
    SUBCLASS_OF_ID = ...
    def __init__(self, full_user: TypeUserFull, chats: List[TypeChat], users: List[TypeUser]) -> None:
        """
        Constructor for users.UserFull: Instance of UserFull.
        """
        ...
    
    def to_dict(self): # -> dict[str, Any]:
        ...
    
    @classmethod
    def from_reader(cls, reader): # -> Self:
        ...
    


class Users(TLObject):
    CONSTRUCTOR_ID = ...
    SUBCLASS_OF_ID = ...
    def __init__(self, users: List[TypeUser]) -> None:
        """
        Constructor for users.Users: Instance of either Users, UsersSlice.
        """
        ...
    
    def to_dict(self): # -> dict[str, Any]:
        ...
    
    @classmethod
    def from_reader(cls, reader): # -> Self:
        ...
    


class UsersSlice(TLObject):
    CONSTRUCTOR_ID = ...
    SUBCLASS_OF_ID = ...
    def __init__(self, count: int, users: List[TypeUser]) -> None:
        """
        Constructor for users.Users: Instance of either Users, UsersSlice.
        """
        ...
    
    def to_dict(self): # -> dict[str, Any]:
        ...
    
    @classmethod
    def from_reader(cls, reader): # -> Self:
        ...
    


