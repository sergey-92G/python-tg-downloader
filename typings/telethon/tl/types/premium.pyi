"""
This type stub file was generated by pyright.
"""

from ...tl.tlobject import TLObject
from typing import List, Optional, TYPE_CHECKING
from ...tl.types import TypeBoost, TypeChat, TypeMyBoost, TypePrepaidGiveaway, TypeStatsPercentValue, TypeUser

"""File generated by TLObjects' generator. All changes will be ERASED"""
if TYPE_CHECKING:
    ...
class BoostsList(TLObject):
    CONSTRUCTOR_ID = ...
    SUBCLASS_OF_ID = ...
    def __init__(self, count: int, boosts: List[TypeBoost], users: List[TypeUser], next_offset: Optional[str] = ...) -> None:
        """
        Constructor for premium.BoostsList: Instance of BoostsList.
        """
        ...
    
    def to_dict(self): # -> dict[str, Any]:
        ...
    
    @classmethod
    def from_reader(cls, reader): # -> Self:
        ...
    


class BoostsStatus(TLObject):
    CONSTRUCTOR_ID = ...
    SUBCLASS_OF_ID = ...
    def __init__(self, level: int, current_level_boosts: int, boosts: int, boost_url: str, my_boost: Optional[bool] = ..., gift_boosts: Optional[int] = ..., next_level_boosts: Optional[int] = ..., premium_audience: Optional[TypeStatsPercentValue] = ..., prepaid_giveaways: Optional[List[TypePrepaidGiveaway]] = ..., my_boost_slots: Optional[List[int]] = ...) -> None:
        """
        Constructor for premium.BoostsStatus: Instance of BoostsStatus.
        """
        ...
    
    def to_dict(self): # -> dict[str, Any]:
        ...
    
    @classmethod
    def from_reader(cls, reader): # -> Self:
        ...
    


class MyBoosts(TLObject):
    CONSTRUCTOR_ID = ...
    SUBCLASS_OF_ID = ...
    def __init__(self, my_boosts: List[TypeMyBoost], chats: List[TypeChat], users: List[TypeUser]) -> None:
        """
        Constructor for premium.MyBoosts: Instance of MyBoosts.
        """
        ...
    
    def to_dict(self): # -> dict[str, Any]:
        ...
    
    @classmethod
    def from_reader(cls, reader): # -> Self:
        ...
    


