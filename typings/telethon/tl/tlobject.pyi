"""
This type stub file was generated by pyright.
"""

_EPOCH_NAIVE = ...
_EPOCH_NAIVE_LOCAL = ...
_EPOCH = ...
class TLObject:
    CONSTRUCTOR_ID = ...
    SUBCLASS_OF_ID = ...
    @staticmethod
    def pretty_format(obj, indent=...):
        """
        Pretty formats the given object as a string which is returned.
        If indent is None, a single line will be returned.
        """
        ...
    
    @staticmethod
    def serialize_bytes(data): # -> bytes:
        """Write bytes by using Telegram guidelines"""
        ...
    
    @staticmethod
    def serialize_datetime(dt): # -> bytes:
        ...
    
    def __eq__(self, o) -> bool:
        ...
    
    def __ne__(self, o) -> bool:
        ...
    
    def __str__(self) -> str:
        ...
    
    def stringify(self):
        ...
    
    def to_dict(self):
        ...
    
    def to_json(self, fp=..., default=..., **kwargs): # -> str | None:
        """
        Represent the current `TLObject` as JSON.

        If ``fp`` is given, the JSON will be dumped to said
        file pointer, otherwise a JSON string will be returned.

        Note that bytes and datetimes cannot be represented
        in JSON, so if those are found, they will be base64
        encoded and ISO-formatted, respectively, by default.
        """
        ...
    
    def __bytes__(self):
        ...
    
    @classmethod
    def from_reader(cls, reader):
        ...
    


class TLRequest(TLObject):
    """
    Represents a content-related `TLObject` (a request that can be sent).
    """
    @staticmethod
    def read_result(reader):
        ...
    
    async def resolve(self, client, utils): # -> None:
        ...
    


