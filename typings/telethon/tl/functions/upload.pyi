"""
This type stub file was generated by pyright.
"""

from ...tl.tlobject import TLRequest
from typing import Optional, TYPE_CHECKING
from ...tl.types import TypeInputFileLocation, TypeInputWebFileLocation

"""File generated by TLObjects' generator. All changes will be ERASED"""
if TYPE_CHECKING:
    ...
class GetCdnFileRequest(TLRequest):
    CONSTRUCTOR_ID = ...
    SUBCLASS_OF_ID = ...
    def __init__(self, file_token: bytes, offset: int, limit: int) -> None:
        """
        :returns upload.CdnFile: Instance of either CdnFileReuploadNeeded, CdnFile.
        """
        ...
    
    def to_dict(self): # -> dict[str, Any]:
        ...
    
    @classmethod
    def from_reader(cls, reader): # -> Self:
        ...
    


class GetCdnFileHashesRequest(TLRequest):
    CONSTRUCTOR_ID = ...
    SUBCLASS_OF_ID = ...
    def __init__(self, file_token: bytes, offset: int) -> None:
        """
        :returns Vector<FileHash>: This type has no constructors.
        """
        ...
    
    def to_dict(self): # -> dict[str, Any]:
        ...
    
    @classmethod
    def from_reader(cls, reader): # -> Self:
        ...
    


class GetFileRequest(TLRequest):
    CONSTRUCTOR_ID = ...
    SUBCLASS_OF_ID = ...
    def __init__(self, location: TypeInputFileLocation, offset: int, limit: int, precise: Optional[bool] = ..., cdn_supported: Optional[bool] = ...) -> None:
        """
        :returns upload.File: Instance of either File, FileCdnRedirect.
        """
        ...
    
    def to_dict(self): # -> dict[str, Any]:
        ...
    
    @classmethod
    def from_reader(cls, reader): # -> Self:
        ...
    


class GetFileHashesRequest(TLRequest):
    CONSTRUCTOR_ID = ...
    SUBCLASS_OF_ID = ...
    def __init__(self, location: TypeInputFileLocation, offset: int) -> None:
        """
        :returns Vector<FileHash>: This type has no constructors.
        """
        ...
    
    def to_dict(self): # -> dict[str, Any]:
        ...
    
    @classmethod
    def from_reader(cls, reader): # -> Self:
        ...
    


class GetWebFileRequest(TLRequest):
    CONSTRUCTOR_ID = ...
    SUBCLASS_OF_ID = ...
    def __init__(self, location: TypeInputWebFileLocation, offset: int, limit: int) -> None:
        """
        :returns upload.WebFile: Instance of WebFile.
        """
        ...
    
    def to_dict(self): # -> dict[str, Any]:
        ...
    
    @classmethod
    def from_reader(cls, reader): # -> Self:
        ...
    


class ReuploadCdnFileRequest(TLRequest):
    CONSTRUCTOR_ID = ...
    SUBCLASS_OF_ID = ...
    def __init__(self, file_token: bytes, request_token: bytes) -> None:
        """
        :returns Vector<FileHash>: This type has no constructors.
        """
        ...
    
    def to_dict(self): # -> dict[str, Any]:
        ...
    
    @classmethod
    def from_reader(cls, reader): # -> Self:
        ...
    


class SaveBigFilePartRequest(TLRequest):
    CONSTRUCTOR_ID = ...
    SUBCLASS_OF_ID = ...
    def __init__(self, file_id: int, file_part: int, file_total_parts: int, bytes: bytes) -> None:
        """
        :returns Bool: This type has no constructors.
        """
        ...
    
    def to_dict(self): # -> dict[str, Any]:
        ...
    
    @classmethod
    def from_reader(cls, reader): # -> Self:
        ...
    


class SaveFilePartRequest(TLRequest):
    CONSTRUCTOR_ID = ...
    SUBCLASS_OF_ID = ...
    def __init__(self, file_id: int, file_part: int, bytes: bytes) -> None:
        """
        :returns Bool: This type has no constructors.
        """
        ...
    
    def to_dict(self): # -> dict[str, Any]:
        ...
    
    @classmethod
    def from_reader(cls, reader): # -> Self:
        ...
    


